import{u as d,d as t,g as T,B as f,a as E,C as g,E as h,P as A,T as P,c as x,b as M,e as _,f as B,h as F,i as O,j as D,k as C,l as L,m as v,n as I,o as U,p as G,q as N,r as w,s as k,t as V,v as Y,w as j,x as H,y as W,z as X,A as Q,D as z,F as K,G as J,H as q,R as Z,I as $,J as ee,K as ae,L as se,Q as te,M as re,N as ie,O as oe,S as ce,U as ne,V as le,W as de}from"./index-DqaD6jdS.js";import{bW as xe,aE as Me,Y as _e,cL as Be,df as Fe,_ as Oe,aF as De,a0 as Ce,a1 as Le,aG as ve,bX as Ie,bY as Ue,bZ as Ge,aH as Ne,aI as we,db as ke,aJ as Ve,aK as Ye,aL as je,aM as He,aN as We,aO as Xe,aP as Qe,aQ as ze,dp as Ke,dq as Je,dr as qe,ar as Ze,cM as $e,cN as ea,cz as aa,cu as sa,aR as ta,aS as ra,aT as ia,b_ as oa,b$ as ca,a2 as na,aU as la,cg as da,bV as ua,cO as ba,as as ma,cA as Sa,aV as Ta,dc as pa,aW as Ra,ch as ya,c0 as fa,cP as Ea,cB as ga,c1 as ha,ci as Aa,cD as Pa,cE as xa,ce as Ma,cK as _a,c2 as Ba,at as Fa,cQ as Oa,cF as Da,cG as Ca,cH as La,cI as va,cJ as Ia,cS as Ua,aX as Ga,aY as Na,aZ as wa,a_ as ka,a$ as Va,c3 as Ya,b0 as ja,b1 as Ha,b2 as Wa,cT as Xa,b3 as Qa,b4 as za,b5 as Ka,cU as Ja,cV as qa,cW as Za,dx as $a,dy as es,b6 as as,b7 as ss,au as ts,av as rs,b8 as is,b9 as os,cX as cs,cY as ns,cZ as ls,a3 as ds,c4 as us,c5 as bs,c6 as ms,ba as Ss,bb as Ts,cj as ps,c$ as Rs,d0 as ys,d1 as fs,d2 as Es,bc as gs,d3 as hs,cR as As,bd as Ps,be as xs,ck as Ms,cl as _s,c7 as Bs,d9 as Fs,da as Os,d4 as Ds,bf as Cs,cm as Ls,cn as vs,dd as Is,bg as Us,bh as Gs,bi as Ns,bj as ws,co as ks,c8 as Vs,cp as Ys,bk as js,bl as Hs,bm as Ws,bn as Xs,$ as Qs,bo as zs,d5 as Ks,cq as Js,c9 as qs,ca as Zs,cr as $s,bp as et,bq as at,br as st,bs as tt,d6 as rt,d7 as it,d8 as ot,de as ct,bt as nt,di as lt,bu as dt,bv as ut,bw as bt,bx as mt,by as St,cb as Tt,dk as pt,cc as Rt,aw as yt,ax as ft,cC as Et,dl as gt,ds as ht,dm as At,dn as Pt,bz as xt,bA as Mt,bB as _t,bC as Bt,bD as Ft,cw as Ot,cx as Dt,dg as Ct,dh as Lt,cs as vt,bE as It,cy as Ut,bF as Gt,bG as Nt,bH as wt,bI as kt,cd as Vt,dt as Yt,du as jt,Z as Ht,dv as Wt,bJ as Xt,bK as Qt,a4 as zt,a5 as Kt,a6 as Jt,bL as qt,a7 as Zt,a8 as $t,a9 as er,aa as ar,bM as sr,c_ as tr,bN as rr,bO as ir,ab as or,ay as cr,ac as nr,ad as lr,ae as dr,af as ur,ag as br,cf as mr,X as Sr,bP as Tr,bQ as pr,ah as Rr,bR as yr,bS as fr,ct as Er,ai as gr,dw as hr,az as Ar,aj as Pr,ak as xr,aA as Mr,al as _r,am as Br,an as Fr,ao as Or,ap as Dr,aB as Cr,aC as Lr,aD as vr,aq as Ir,cv as Ur,dj as Gr,bT as Nr,bU as wr}from"./index-DqaD6jdS.js";const ue={get parse(){return t("7.3.0","utils.url.parse is deprecated, use native URL API instead."),d.parse},get format(){return t("7.3.0","utils.url.format is deprecated, use native URL API instead."),d.format},get resolve(){return t("7.3.0","utils.url.resolve is deprecated, use native URL API instead."),d.resolve}};function be(){t("7.0.0","skipHello is deprecated, please use settings.RENDER_OPTIONS.hello")}function me(){t("7.0.0",`sayHello is deprecated, please use Renderer's "hello" option`)}const p=/^\s*data:(?:([\w-]+)\/([\w+.-]+))?(?:;charset=([\w-]+))?(?:;(base64))?,(.*)/i,Se={Float32Array,Uint32Array,Int32Array,Uint8Array};function Te(s,e){let i=0,u=0;const c={};for(let a=0;a<s.length;a++)u+=e[a],i+=s[a].length;const b=new ArrayBuffer(i*4);let m=null,S=0;for(let a=0;a<s.length;a++){const n=e[a],l=s[a],o=T(l);c[o]||(c[o]=new Se[o](b)),m=c[o];for(let r=0;r<l.length;r++){const R=(r/n|0)*u+S,y=r%n;m[R+y]=l[r]}S+=n}return new Float32Array(b)}function pe(s){const e=p.exec(s);if(e)return{mediaType:e[1]?e[1].toLowerCase():void 0,subType:e[2]?e[2].toLowerCase():void 0,charset:e[3]?e[3].toLowerCase():void 0,encoding:e[4]?e[4].toLowerCase():void 0,data:e[5]}}const ye=Object.freeze(Object.defineProperty({__proto__:null,BaseTextureCache:f,BoundingBox:E,CanvasRenderTarget:g,DATA_URI:p,EventEmitter:h,ProgramCache:A,TextureCache:P,clearTextureCache:x,correctBlendMode:M,createIndicesForQuads:_,decomposeDataUri:pe,deprecation:t,destroyTextureCache:B,detectVideoAlphaMode:F,determineCrossOrigin:O,earcut:D,getBufferType:T,getCanvasBoundingBox:C,getResolutionOfUrl:L,hex2rgb:v,hex2string:I,interleaveTypedArrays:Te,isMobile:U,isPow2:G,isWebGLSupported:N,log2:w,nextPow2:k,path:V,premultiplyBlendMode:Y,premultiplyRgba:j,premultiplyTint:H,premultiplyTintToRgba:W,removeItems:X,rgb2hex:Q,sayHello:me,sign:z,skipHello:be,string2hex:K,trimCanvas:J,uid:q,url:ue},Symbol.toStringTag,{value:"Module"}));class fe{constructor(){this._glTransformFeedbacks={},this.buffers=[],this.disposeRunner=new Z("disposeTransformFeedback")}bindBuffer(e,i){this.buffers[e]=i}destroy(){this.disposeRunner.emit(this,!1)}}const Ee="7.4.3",ge={buildPoly:de,buildCircle:le,buildRectangle:ne,buildRoundedRectangle:ce,buildLine:oe,ArcUtils:ie,BezierUtils:re,QuadraticUtils:te,BatchPart:se,FILL_COMMANDS:ae,BATCH_POOL:ee,DRAW_CALL_POOL:$};class he{constructor(e){this.maxMilliseconds=e,this.frameStart=0}beginFrame(){this.frameStart=Date.now()}allowedToUpload(){return Date.now()-this.frameStart<this.maxMilliseconds}}export{xe as ALPHA_MODES,Me as AbstractMultiResource,_e as AccessibilityManager,Be as AlphaFilter,Fe as AnimatedSprite,Oe as Application,De as ArrayResource,Ce as Assets,Le as AssetsClass,ve as Attribute,Ie as BLEND_MODES,Ue as BUFFER_BITS,Ge as BUFFER_TYPE,Ne as BackgroundSystem,we as BaseImageResource,ke as BasePrepare,Ve as BaseRenderTexture,Ye as BaseTexture,je as BatchDrawCall,He as BatchGeometry,We as BatchRenderer,Xe as BatchShaderGenerator,Qe as BatchSystem,ze as BatchTextureArray,Ke as BitmapFont,Je as BitmapFontData,qe as BitmapText,Ze as BlobResource,$e as BlurFilter,ea as BlurFilterPass,aa as Bounds,sa as BrowserAdapter,ta as Buffer,ra as BufferResource,ia as BufferSystem,oa as CLEAR_MODES,ca as COLOR_MASK_BITS,na as Cache,la as CanvasResource,da as Circle,ua as Color,ba as ColorMatrixFilter,ma as CompressedTextureResource,Sa as Container,Ta as ContextSystem,pa as CountLimiter,Ra as CubeResource,ya as DEG_TO_RAD,fa as DRAW_MODES,Ea as DisplacementFilter,ga as DisplayObject,ha as ENV,Aa as Ellipse,Pa as EventBoundary,xa as EventSystem,Ma as ExtensionType,_a as Extract,Ba as FORMATS,Fa as FORMATS_TO_COMPONENTS,Oa as FXAAFilter,Da as FederatedDisplayObject,Ca as FederatedEvent,La as FederatedMouseEvent,va as FederatedPointerEvent,Ia as FederatedWheelEvent,Ua as FillStyle,Ga as Filter,Na as FilterState,wa as FilterSystem,ka as Framebuffer,Va as FramebufferSystem,Ya as GC_MODES,ja as GLFramebuffer,Ha as GLProgram,Wa as GLTexture,Xa as GRAPHICS_CURVES,Qa as GenerateTextureSystem,za as Geometry,Ka as GeometrySystem,Ja as Graphics,qa as GraphicsData,Za as GraphicsGeometry,$a as HTMLText,es as HTMLTextStyle,as as IGLUniformData,ss as INSTALLED,ts as INTERNAL_FORMATS,rs as INTERNAL_FORMAT_TO_BYTES_PER_PIXEL,is as ImageBitmapResource,os as ImageResource,cs as LINE_CAP,ns as LINE_JOIN,ls as LineStyle,ds as LoaderParserPriority,us as MASK_TYPES,bs as MIPMAP_MODES,ms as MSAA_QUALITY,Ss as MaskData,Ts as MaskSystem,ps as Matrix,Rs as Mesh,ys as MeshBatchUvs,fs as MeshGeometry,Es as MeshMaterial,gs as MultisampleSystem,hs as NineSlicePlane,As as NoiseFilter,Ps as ObjectRenderer,xs as ObjectRendererSystem,Ms as ObservablePoint,_s as PI_2,Bs as PRECISION,Fs as ParticleContainer,Os as ParticleRenderer,Ds as PlaneGeometry,Cs as PluginSystem,Ls as Point,vs as Polygon,Is as Prepare,Us as Program,Gs as ProjectionSystem,Ns as Quad,ws as QuadUv,ks as RAD_TO_DEG,Vs as RENDERER_TYPE,Ys as Rectangle,js as RenderTexture,Hs as RenderTexturePool,Ws as RenderTextureSystem,Xs as Renderer,Qs as ResizePlugin,zs as Resource,Ks as RopeGeometry,Js as RoundedRectangle,Z as Runner,qs as SAMPLER_TYPES,Zs as SCALE_MODES,$s as SHAPES,et as SVGResource,at as ScissorSystem,st as Shader,tt as ShaderSystem,rt as SimpleMesh,it as SimplePlane,ot as SimpleRope,ct as Sprite,nt as SpriteMaskFilter,lt as Spritesheet,dt as StartupSystem,ut as State,bt as StateSystem,mt as StencilSystem,St as SystemManager,Tt as TARGETS,pt as TEXT_GRADIENT,Rt as TYPES,yt as TYPES_TO_BYTES_PER_COMPONENT,ft as TYPES_TO_BYTES_PER_PIXEL,Et as TemporaryDisplayObject,gt as Text,ht as TextFormat,At as TextMetrics,Pt as TextStyle,xt as Texture,Mt as TextureGCSystem,_t as TextureMatrix,Bt as TextureSystem,Ft as TextureUvs,Ot as Ticker,Dt as TickerPlugin,Ct as TilingSprite,Lt as TilingSpriteRenderer,he as TimeLimiter,vt as Transform,fe as TransformFeedback,It as TransformFeedbackSystem,Ut as UPDATE_PRIORITY,Gt as UniformGroup,Ee as VERSION,Nt as VideoResource,wt as ViewSystem,kt as ViewableBuffer,Vt as WRAP_MODES,Yt as XMLFormat,jt as XMLStringFormat,Ht as accessibleTarget,Wt as autoDetectFormat,Xt as autoDetectRenderer,Qt as autoDetectResource,zt as cacheTextureArray,Kt as checkDataUrl,Jt as checkExtension,qt as checkMaxIfStatementsInShader,Zt as convertToList,$t as copySearchParams,er as createStringVariations,ar as createTexture,sr as createUBOElements,tr as curves,rr as defaultFilterVertex,ir as defaultVertex,or as detectAvif,cr as detectCompressedTextures,nr as detectDefaults,lr as detectMp4,dr as detectOgv,ur as detectWebm,br as detectWebp,mr as extensions,Sr as filters,Tr as generateProgram,pr as generateUniformBufferSync,Rr as getFontFamilyName,yr as getTestContext,fr as getUBOData,ge as graphicsUtils,Er as groupD8,U as isMobile,gr as isSingleItem,hr as loadBitmapFont,Ar as loadDDS,Pr as loadImageBitmap,xr as loadJson,Mr as loadKTX,_r as loadSVG,Br as loadTextures,Fr as loadTxt,Or as loadVideo,Dr as loadWebFont,Cr as parseDDS,Lr as parseKTX,vr as resolveCompressedTextureUrl,Ir as resolveTextureUrl,Ur as settings,Gr as spritesheetAsset,Nr as uniformParsers,wr as unsafeEvalSupported,ye as utils};
